/* Container for the entire command button component */
.command-button {
  margin-bottom: 10px;       /* Space between multiple buttons */
  display: flex;             /* Use flexbox for layout */
  align-items: stretch;      /* Stretch items to full height */
  flex-wrap: wrap;           /* Allow wrapping on small screens */
  width: 100%;               /* Full width */
}

/* Container for the button and details toggle */
.command-info {
  display: flex;             /* Use flexbox for layout */
  flex-direction: column;    /* Stack elements vertically */
  flex: 1;                   /* Take up available space */
  min-width: 140px;          /* Match button width */
}

/* Styling for the standard text button */
button {
  padding: 10px 15px;        /* Inner spacing */
  border: none;              /* Remove default border */
  border-radius: 4px;        /* Rounded corners */
  background-color: #2c3e50; /* Dark blue background */
  color: white;              /* White text for contrast */
  cursor: pointer;           /* Show pointer cursor on hover */
  min-width: 150px;          /* Minimum button width */
  font-weight: bold;         /* Bold text for emphasis */
  transition: background-color 0.3s; /* Smooth background transition */
}

/* Hover effect for standard buttons */
button:hover {
  background-color: #1c2e40; /* Darker background on hover */
}

/* Active state for standard buttons */
button:active {
  background-color: #0c1e30; /* Even darker background when clicked */
}

/* Style for the button when command is executing */
button.is-executing {
  background-color: #95a5a6; /* Grey background when executing */
  cursor: wait;              /* Show waiting cursor */
}

/* Styling for the details toggle button */
.details-toggle {
  background-color: #6c757d; /* Grey background */
  color: white;              /* White text for contrast */
  padding: 2px 8px;          /* Smaller padding */
  font-size: 12px;           /* Smaller font size */
  margin-top: 5px;           /* Space above button */
  min-width: auto;           /* Auto width based on content */
  align-self: flex-start;    /* Align to the left */
}

/* Container for command details */
.details {
  background-color: #f8f9fa; /* Light background */
  border: 1px solid #dee2e6; /* Light grey border */
  border-radius: 4px;        /* Rounded corners */
  padding: 10px;             /* Inner spacing */
  margin-top: 5px;           /* Space above container */
  font-size: 12px;           /* Smaller font size */
  overflow-x: auto;          /* Horizontal scrolling if needed */
  width: 100%;               /* Full width */
}

/* Styling for pre-formatted text in details */
.details pre {
  margin: 0 0 5px 0;         /* Remove top/bottom margin, add small bottom margin */
  white-space: pre-wrap;     /* Wrap text */
  font-family: monospace;    /* Monospace font for code */
}

/* Container for MQTT toggle */
.execution-mode {
  margin-left: 10px;         /* Space from the button */
  display: flex;             /* Use flexbox */
  align-items: center;       /* Center items vertically */
}

/* Styling for MQTT toggle label */
label {
  display: flex;             /* Use flexbox */
  align-items: center;       /* Center items vertically */
  cursor: pointer;           /* Show pointer cursor */
}

/* Spacing for checkbox */
input[type="checkbox"] {
  margin-right: 5px;         /* Space after checkbox */
}

/* SVG Button Styles */
/* Container for SVG button */
.svg-button {
  cursor: pointer;           /* Show pointer cursor */
  display: flex;             /* Use flexbox */
  flex-direction: column;    /* Stack elements vertically */
  align-items: center;       /* Center items horizontally */
  justify-content: center;   /* Center content vertically */
  padding: 1.5rem 1rem;      /* Increased horizontal padding */
  background-color: var(--button-background); /* White background from variables */
  border-radius: 12px;       /* Rounded corners */
  box-shadow: 0 2px 6px var(--button-shadow); /* Subtle shadow for depth */
  transition: all 0.2s ease-in-out; /* Smooth transition for all properties */
  min-width: 140px;          /* Increased minimum button width */
  height: 100%;              /* Take full height */
  text-align: center;        /* Center text content */
  position: relative;        /* Create positioning context */
}

/* Hover effect for SVG button */
.svg-button:hover {
  transform: translateY(-3px) scale(1.03); /* Move up and scale slightly */
  box-shadow: 0 6px 12px var(--button-hover-shadow); /* Stronger shadow */
}

/* SVG icon container */
.svg-button svg {
  width: 3rem;               /* Increased icon width */
  height: 3rem;              /* Increased icon height */
  fill: var(--foreground-color); /* Dark fill from variables */
  transition: all 0.2s ease-in-out; /* Smooth transition for all properties */
  display: block;            /* Block display for proper centering */
  position: relative;        /* Use relative positioning */
  margin: 0 auto 0.75rem;    /* Increased bottom margin */
  overflow: visible;         /* Allow content to overflow */
}

/* Special styling for text-based SVGs */
.svg-button .text-based-svg {
  width: 140px;               /* Fixed width for consistency */
  height: 3rem;               /* Match the standard SVG height */
  max-width: 100%;            /* Ensure it doesn't overflow container */
}

/* Hover effect - make SVG slightly larger on hover */
.svg-button:hover svg {
  transform: scale(1.05);    /* Grow slightly on hover */
  fill: var(--accent-color); /* Change to accent color on hover */
}

/* Target individual SVG elements on hover */
.svg-button:hover svg path {
  fill: var(--accent-color); /* Change path fill on hover */
  stroke: var(--accent-color); /* Change path stroke on hover */
}

/* Add hover styles for polygon elements */
.svg-button:hover svg polygon {
  fill: var(--accent-color); /* Change polygon fill on hover */
  stroke: var(--accent-color); /* Change polygon stroke on hover */
}

/* Add hover styles for circle elements */
.svg-button:hover svg circle {
  fill: var(--accent-color); /* Change circle fill on hover */
  stroke: var(--accent-color); /* Change circle stroke on hover */
}

/* Special case for elements with fill:none that rely only on strokes */
.svg-button:hover svg path[fill="none"],
.svg-button:hover svg polygon[fill="none"],
.svg-button:hover svg circle[fill="none"] {
  stroke: var(--accent-color); /* Change stroke color on hover */
  /* Keep stroke-width and fill as they are */
  fill: none;
}

.svg-button:hover svg rect {
  fill: var(--accent-color); /* Change rectangle fill on hover */
  stroke: var(--accent-color); /* Change rectangle stroke on hover */
}

.svg-button:hover svg text {
  fill: #fff; /* Keep text white for readability on color background */
}

/* Text below SVG icon */
.svg-button span {
  font-size: 0.9rem;         /* Slightly smaller font */
  user-select: none;         /* Prevent text selection */
  text-align: center;        /* Center text */
} 